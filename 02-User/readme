1.pom文件导入相关依赖
2.搭建SSM环境
3.建立实体类User、Dept、Employee、Job、Role、编写工具类js(HRS.JS)由于表单验证
4.编写DeptDao以及UserDao，暂时只有insert操作
5.编写DeptService以及UserService，暂时只有insert操作
6.配置UserController以及DeptController，暂时只完成添加操作
7.完善部门添加,增加部门名字非空验证,在deptService中增加先验证是否存在同名部门名字
8.查询部门流程：
    1)跳转页数(?PageNo=N)，后端拿到页数N, 每页显示X条数据，进行动态SQL查询(SELECT did,dname,dremark FROM dept LIMIT (N-1)*X, X )
    2)前端拿到Page对象，根据页数决定是否最前一页，前一页，下一页最后一页之类是否可点击，不可点击的也不能绑定事件
    3)ajax的success函数中：清空数据，再从data中取出数据塞入表格,给数据行的复选框赋值为value = 部门编号(方便删除操作传值)
    4)根据选中的数据行的数量来判断删除和更新操作的开放
    5)复选框的全选与全部选
9.删除操作:
    1)用form包含所有数据行的复选框
    2)ajax方式提交表单,后台获取所有要删除的dids
    3)如果Service层删除操作得到的影响行数的数量 == 所选中提交的数据行数量 ,那就判为删除成功
10.更改操作:
    1)重复利用添加jsp
    2)从查询页面跳过来时,把did赋值到一个隐藏域中
            <input type="text"  hidden name="did" value="<%=request.getParameter("chkItems")%>" readonly></input>
    3)根据did从后台获取部门名字以及备注赋值到相应的组件
    4)保存时先检验是否和已存在的部门名字重复
    5)显示后端传来的msg
    6)给返回按钮绑定事件,可返回到查询页面


